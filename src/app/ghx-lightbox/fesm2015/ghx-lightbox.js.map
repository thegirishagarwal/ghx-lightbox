{"version":3,"file":"ghx-lightbox.js","sources":["ng://ghx-lightbox/lib/services/ghx-lightbox.service.ts","ng://ghx-lightbox/lib/components/ghx-lightbox/ghx-lightbox.component.ts","ng://ghx-lightbox/lib/components/ghx-lightbox-actions/ghx-lightbox-actions.component.ts","ng://ghx-lightbox/lib/components/ghx-lightbox-nav/ghx-lightbox-nav.component.ts","ng://ghx-lightbox/lib/directives/ghx-lightbox.directive.ts","ng://ghx-lightbox/lib/directives/ghx-lightbox-group.directive.ts","ng://ghx-lightbox/lib/ghx-lightbox.module.ts"],"sourcesContent":["import {\n  ComponentRef,\n  Injectable,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ItemType } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GhxLightboxService {\n\n  public allItems$: BehaviorSubject<ItemType[]> = new BehaviorSubject([]);\n  public allItemsLength = 0;\n  public openedIndex = 0;\n\n  public changeIndex$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  viewCont: any;\n  componentRef!: ComponentRef<any>;\n\n  constructor() { }\n\n\n  public destroy() {\n    this.componentRef.destroy();\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.remove('ghx-lightbox-opened');\n  }\n\n\n  _setupComponentInstance(item: ItemType[]) {\n    this.componentRef.instance.src = item[this.openedIndex].src;\n    this.componentRef.instance.caption = item[this.openedIndex].caption;\n  }\n\n}\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ghx-lightbox',\n  templateUrl: './ghx-lightbox.component.html',\n  styleUrls: ['./ghx-lightbox.component.scss', '../../styles/_ghx-lightbox.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GhxLightboxComponent implements OnInit, AfterContentInit {\n\n  @Input() src: string = '';\n  @Input() caption: string = '';\n  @Input() captionPosition: 'top' | 'bottom' = 'bottom';\n  @Input() showPrevNextButton: boolean = false;\n\n  @ViewChild('lightCaption', { static: true })\n    lightCaption!: ElementRef<HTMLElement>;\n  @ViewChild('lightBoxFigure', {static: true})\n    lightBoxFigure!: ElementRef<HTMLElement>;\n  @ViewChild('lightboxImage', {static: true})\n    lightboxImage!: ElementRef<HTMLElement>;\n\n  constructor(\n    public viewContainerRef: ViewContainerRef,\n    private glService: GhxLightboxService,\n    private render2: Renderer2\n  ) { }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    this.setImageHeight();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterContentInit() {\n    this.setImageHeight();\n  }\n\n  closeLightBox() {\n    this.glService.destroy();\n  }\n\n  setImageHeight() {\n    const totalHeight = window.innerHeight - 100;\n    this.render2.setStyle(this.lightboxImage.nativeElement, 'max-height', `${totalHeight}px`);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  selector: 'ghx-lightbox-actions',\n  templateUrl: './ghx-lightbox-actions.component.html',\n  styleUrls: ['./ghx-lightbox-actions.component.scss']\n})\nexport class GhxLightboxActionsComponent implements OnInit {\n\n  constructor(\n    private gls: GhxLightboxService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onCloseLightBox() {\n    this.gls.destroy();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ghx-lightbox-nav',\n  templateUrl: './ghx-lightbox-nav.component.html',\n  styleUrls: ['./ghx-lightbox-nav.component.scss']\n})\nexport class GhxLightboxNavComponent implements OnInit {\n\n  constructor(\n    public gls: GhxLightboxService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  goToPrev() {\n    if (this.gls.openedIndex === 0) {\n      return;\n    }\n    this.gls.openedIndex = this.gls.openedIndex - 1;\n    this.gls.changeIndex$.next(this.gls.openedIndex);\n  }\n  goToNext() {\n    if (this.gls.openedIndex >= this.gls.allItemsLength) {\n      return;\n    }\n    this.gls.openedIndex = this.gls.openedIndex + 1;\n    this.gls.changeIndex$.next(this.gls.openedIndex);\n  }\n\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport { GhxLightboxComponent } from '../components';\nimport { ItemType } from '../interfaces';\nimport { GhxLightboxService } from '../services';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ghxLightbox]',\n})\nexport class GhxLightboxDirective implements OnInit {\n\n  @Input() src = '';\n  @Input() alt = '';\n\n  constructor(\n    private elemRef: ElementRef<HTMLElement>,\n    private glService: GhxLightboxService,\n    private render2: Renderer2,\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.elemRef.nativeElement.classList.add('ghx-lightbox-item');\n  }\n\n\n  @HostListener('click')\n  onClick(allItems: ItemType[], index = 0) {\n    // console.error(index);\n    if (this.elemRef.nativeElement.closest('.ghx-lightbox-group') === null) {\n      this.glService.openedIndex = 0;\n      const source = [\n        {\n          src: this.src,\n          caption: this.alt\n        }\n      ];\n      this.initLightBox(source);\n    } else {\n    }\n  }\n\n  @HostBinding('class.ghx-lightbox-item')\n  get bindClass() {\n    return true;\n  }\n\n  ngOnInit() {\n    this.render2.setStyle(this.elemRef.nativeElement, 'cursor', 'pointer');\n  }\n\n\n  initLightBox(source: ItemType[]) {\n\n\n    const cf = this.cfr.resolveComponentFactory(GhxLightboxComponent);\n    const component = cf.create(this.injector);\n    this.appRef.attachView(component.hostView);\n\n    const domElem = (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n    this.glService.componentRef = component;\n\n    this.glService._setupComponentInstance(source);\n\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.add('ghx-lightbox-opened');\n  }\n\n}\n","import {\n  AfterContentInit,\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\nimport { GhxLightboxComponent } from '../components';\nimport { ItemType } from '../interfaces';\nimport { GhxLightboxService } from '../services';\nimport { GhxLightboxDirective } from './ghx-lightbox.directive';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ghxLightboxGroup]'\n})\nexport class GhxLightboxGroupDirective implements OnInit, AfterContentInit {\n\n  gld: GhxLightboxDirective;\n\n  allItems$: BehaviorSubject<ItemType[]> = new BehaviorSubject([]);\n\n  @ViewChildren(GhxLightboxDirective)\n  private gldView: QueryList<GhxLightboxDirective>;\n\n  @ContentChildren(GhxLightboxDirective)\n  public gldList: QueryList<GhxLightboxDirective>;\n\n  constructor(\n    private elemRef: ElementRef<HTMLElement>,\n    private glService: GhxLightboxService,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private appRef: ApplicationRef\n  ) {\n    this.elemRef.nativeElement.classList.add('ghx-lightbox-group');\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit() {\n    const itemArray: ItemType[] = [];\n    this.gldList.toArray().forEach((lightBox, key: number) => {\n      itemArray.push(\n        {\n          src: lightBox.src,\n          caption: lightBox.alt,\n        }\n      );\n    });\n    this.allItems$.next(itemArray);\n    this.glService.allItemsLength = itemArray.length;\n\n    const ghxItems = this.elemRef.nativeElement.querySelectorAll('.ghx-lightbox-item');\n    ghxItems.forEach((lightBox, key) => {\n      lightBox.addEventListener('click', (e: any) => {\n        e.preventDefault();\n        this.glService.openedIndex = key;\n        this.initLightBox();\n        this.changeNavigation();\n        return;\n      });\n    });\n  }\n\n\n  @HostBinding('class.ghx-lightbox-group')\n  get bindClass() {\n    return true;\n  }\n\n  initLightBox() {\n    const cf = this.cfr.resolveComponentFactory(GhxLightboxComponent);\n    const component = cf.create(this.injector);\n    this.appRef.attachView(component.hostView);\n\n    const domElem = (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n    this.glService.componentRef = component;\n\n    this.glService._setupComponentInstance(this.allItems$.value);\n    this.glService.componentRef.instance.showPrevNextButton = true;\n\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.add('ghx-lightbox-opened');\n  }\n\n  changeNavigation() {\n    this.glService.changeIndex$.subscribe(index => {\n      this.glService._setupComponentInstance(this.allItems$.value);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  GhxLightboxComponent,\n  GhxLightboxActionsComponent,\n  GhxLightboxNavComponent\n} from './components';\n\nimport {\n  GhxLightboxService\n} from './services';\n\nimport {\n  GhxLightboxDirective,\n  GhxLightboxGroupDirective\n} from './directives';\n\n\n\n@NgModule({\n  declarations: [\n    GhxLightboxComponent,\n    GhxLightboxDirective,\n    GhxLightboxGroupDirective,\n    GhxLightboxActionsComponent,\n    GhxLightboxNavComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GhxLightboxDirective,\n    GhxLightboxGroupDirective\n  ],\n  entryComponents: [GhxLightboxComponent],\n  providers: [\n    GhxLightboxService\n  ]\n})\nexport class GhxLightboxModule { }\n"],"names":[],"mappings":"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"}