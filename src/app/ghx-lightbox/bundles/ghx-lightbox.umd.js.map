{"version":3,"file":"ghx-lightbox.umd.js","sources":["ng://ghx-lightbox/lib/services/ghx-lightbox.service.ts","ng://ghx-lightbox/lib/components/ghx-lightbox/ghx-lightbox.component.ts","ng://ghx-lightbox/lib/components/ghx-lightbox-actions/ghx-lightbox-actions.component.ts","ng://ghx-lightbox/lib/components/ghx-lightbox-nav/ghx-lightbox-nav.component.ts","ng://ghx-lightbox/lib/directives/ghx-lightbox.directive.ts","ng://ghx-lightbox/lib/directives/ghx-lightbox-group.directive.ts","ng://ghx-lightbox/lib/ghx-lightbox.module.ts"],"sourcesContent":["import {\n  ComponentRef,\n  Injectable,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ItemType } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GhxLightboxService {\n\n  public allItems$: BehaviorSubject<ItemType[]> = new BehaviorSubject([]);\n  public allItemsLength = 0;\n  public openedIndex = 0;\n\n  public changeIndex$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  viewCont: any;\n  componentRef!: ComponentRef<any>;\n\n  constructor() { }\n\n\n  public destroy() {\n    this.componentRef.destroy();\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.remove('ghx-lightbox-opened');\n  }\n\n\n  _setupComponentInstance(item: ItemType[]) {\n    this.componentRef.instance.src = item[this.openedIndex].src;\n    this.componentRef.instance.caption = item[this.openedIndex].caption;\n  }\n\n}\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ghx-lightbox',\n  templateUrl: './ghx-lightbox.component.html',\n  styleUrls: ['./ghx-lightbox.component.scss', '../../styles/_ghx-lightbox.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GhxLightboxComponent implements OnInit, AfterContentInit {\n\n  @Input() src: string = '';\n  @Input() caption: string = '';\n  @Input() captionPosition: 'top' | 'bottom' = 'bottom';\n  @Input() showPrevNextButton: boolean = false;\n\n  @ViewChild('lightCaption', { static: true })\n    lightCaption!: ElementRef<HTMLElement>;\n  @ViewChild('lightBoxFigure', {static: true})\n    lightBoxFigure!: ElementRef<HTMLElement>;\n  @ViewChild('lightboxImage', {static: true})\n    lightboxImage!: ElementRef<HTMLElement>;\n\n  constructor(\n    public viewContainerRef: ViewContainerRef,\n    private glService: GhxLightboxService,\n    private render2: Renderer2\n  ) { }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    this.setImageHeight();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterContentInit() {\n    this.setImageHeight();\n  }\n\n  closeLightBox() {\n    this.glService.destroy();\n  }\n\n  setImageHeight() {\n    const totalHeight = window.innerHeight - 100;\n    this.render2.setStyle(this.lightboxImage.nativeElement, 'max-height', `${totalHeight}px`);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  selector: 'ghx-lightbox-actions',\n  templateUrl: './ghx-lightbox-actions.component.html',\n  styleUrls: ['./ghx-lightbox-actions.component.scss']\n})\nexport class GhxLightboxActionsComponent implements OnInit {\n\n  constructor(\n    private gls: GhxLightboxService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onCloseLightBox() {\n    this.gls.destroy();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ghx-lightbox-nav',\n  templateUrl: './ghx-lightbox-nav.component.html',\n  styleUrls: ['./ghx-lightbox-nav.component.scss']\n})\nexport class GhxLightboxNavComponent implements OnInit {\n\n  constructor(\n    public gls: GhxLightboxService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  goToPrev() {\n    if (this.gls.openedIndex === 0) {\n      return;\n    }\n    this.gls.openedIndex = this.gls.openedIndex - 1;\n    this.gls.changeIndex$.next(this.gls.openedIndex);\n  }\n  goToNext() {\n    if (this.gls.openedIndex >= this.gls.allItemsLength) {\n      return;\n    }\n    this.gls.openedIndex = this.gls.openedIndex + 1;\n    this.gls.changeIndex$.next(this.gls.openedIndex);\n  }\n\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport { GhxLightboxComponent } from '../components';\nimport { ItemType } from '../interfaces';\nimport { GhxLightboxService } from '../services';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ghxLightbox]',\n})\nexport class GhxLightboxDirective implements OnInit {\n\n  @Input() src = '';\n  @Input() alt = '';\n\n  constructor(\n    private elemRef: ElementRef<HTMLElement>,\n    private glService: GhxLightboxService,\n    private render2: Renderer2,\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.elemRef.nativeElement.classList.add('ghx-lightbox-item');\n  }\n\n\n  @HostListener('click')\n  onClick(allItems: ItemType[], index = 0) {\n    // console.error(index);\n    if (this.elemRef.nativeElement.closest('.ghx-lightbox-group') === null) {\n      this.glService.openedIndex = 0;\n      const source = [\n        {\n          src: this.src,\n          caption: this.alt\n        }\n      ];\n      this.initLightBox(source);\n    } else {\n    }\n  }\n\n  @HostBinding('class.ghx-lightbox-item')\n  get bindClass() {\n    return true;\n  }\n\n  ngOnInit() {\n    this.render2.setStyle(this.elemRef.nativeElement, 'cursor', 'pointer');\n  }\n\n\n  initLightBox(source: ItemType[]) {\n\n\n    const cf = this.cfr.resolveComponentFactory(GhxLightboxComponent);\n    const component = cf.create(this.injector);\n    this.appRef.attachView(component.hostView);\n\n    const domElem = (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n    this.glService.componentRef = component;\n\n    this.glService._setupComponentInstance(source);\n\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.add('ghx-lightbox-opened');\n  }\n\n}\n","import {\n  AfterContentInit,\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\nimport { GhxLightboxComponent } from '../components';\nimport { ItemType } from '../interfaces';\nimport { GhxLightboxService } from '../services';\nimport { GhxLightboxDirective } from './ghx-lightbox.directive';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ghxLightboxGroup]'\n})\nexport class GhxLightboxGroupDirective implements OnInit, AfterContentInit {\n\n  gld: GhxLightboxDirective;\n\n  allItems$: BehaviorSubject<ItemType[]> = new BehaviorSubject([]);\n\n  @ViewChildren(GhxLightboxDirective)\n  private gldView: QueryList<GhxLightboxDirective>;\n\n  @ContentChildren(GhxLightboxDirective)\n  public gldList: QueryList<GhxLightboxDirective>;\n\n  constructor(\n    private elemRef: ElementRef<HTMLElement>,\n    private glService: GhxLightboxService,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private appRef: ApplicationRef\n  ) {\n    this.elemRef.nativeElement.classList.add('ghx-lightbox-group');\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit() {\n    const itemArray: ItemType[] = [];\n    this.gldList.toArray().forEach((lightBox, key: number) => {\n      itemArray.push(\n        {\n          src: lightBox.src,\n          caption: lightBox.alt,\n        }\n      );\n    });\n    this.allItems$.next(itemArray);\n    this.glService.allItemsLength = itemArray.length;\n\n    const ghxItems = this.elemRef.nativeElement.querySelectorAll('.ghx-lightbox-item');\n    ghxItems.forEach((lightBox, key) => {\n      lightBox.addEventListener('click', (e: any) => {\n        e.preventDefault();\n        this.glService.openedIndex = key;\n        this.initLightBox();\n        this.changeNavigation();\n        return;\n      });\n    });\n  }\n\n\n  @HostBinding('class.ghx-lightbox-group')\n  get bindClass() {\n    return true;\n  }\n\n  initLightBox() {\n    const cf = this.cfr.resolveComponentFactory(GhxLightboxComponent);\n    const component = cf.create(this.injector);\n    this.appRef.attachView(component.hostView);\n\n    const domElem = (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n    this.glService.componentRef = component;\n\n    this.glService._setupComponentInstance(this.allItems$.value);\n    this.glService.componentRef.instance.showPrevNextButton = true;\n\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.add('ghx-lightbox-opened');\n  }\n\n  changeNavigation() {\n    this.glService.changeIndex$.subscribe(index => {\n      this.glService._setupComponentInstance(this.allItems$.value);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  GhxLightboxComponent,\n  GhxLightboxActionsComponent,\n  GhxLightboxNavComponent\n} from './components';\n\nimport {\n  GhxLightboxService\n} from './services';\n\nimport {\n  GhxLightboxDirective,\n  GhxLightboxGroupDirective\n} from './directives';\n\n\n\n@NgModule({\n  declarations: [\n    GhxLightboxComponent,\n    GhxLightboxDirective,\n    GhxLightboxGroupDirective,\n    GhxLightboxActionsComponent,\n    GhxLightboxNavComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GhxLightboxDirective,\n    GhxLightboxGroupDirective\n  ],\n  entryComponents: [GhxLightboxComponent],\n  providers: [\n    GhxLightboxService\n  ]\n})\nexport class GhxLightboxModule { }\n"],"names":["BehaviorSubject","Injectable","Component","ViewEncapsulation","ViewContainerRef","Renderer2","Input","ViewChild","HostListener","Directive","ElementRef","ComponentFactoryResolver","ApplicationRef","Injector","HostBinding","ViewChildren","ContentChildren","NgModule","CommonModule"],"mappings":"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"}