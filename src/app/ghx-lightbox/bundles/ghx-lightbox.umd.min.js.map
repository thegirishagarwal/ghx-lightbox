{"version":3,"sources":["ng://ghx-lightbox/lib/services/ghx-lightbox.service.ts","ng://ghx-lightbox/lib/components/ghx-lightbox/ghx-lightbox.component.ts","ng://ghx-lightbox/lib/components/ghx-lightbox-actions/ghx-lightbox-actions.component.ts","ng://ghx-lightbox/lib/components/ghx-lightbox-nav/ghx-lightbox-nav.component.ts","ng://ghx-lightbox/lib/directives/ghx-lightbox.directive.ts","ng://ghx-lightbox/lib/directives/ghx-lightbox-group.directive.ts","ng://ghx-lightbox/lib/ghx-lightbox.module.ts"],"names":["GhxLightboxService","this","allItems$","BehaviorSubject","allItemsLength","openedIndex","changeIndex$","prototype","destroy","componentRef","document","querySelector","classList","remove","_setupComponentInstance","item","instance","src","caption","Injectable","args","providedIn","GhxLightboxComponent","viewContainerRef","glService","render2","captionPosition","showPrevNextButton","onWindowResize","setImageHeight","ngOnInit","ngAfterContentInit","closeLightBox","totalHeight","window","innerHeight","setStyle","lightboxImage","nativeElement","Component","selector","template","encapsulation","ViewEncapsulation","None","ViewContainerRef","Renderer2","Input","ViewChild","static","HostListener","GhxLightboxActionsComponent","gls","onCloseLightBox","GhxLightboxNavComponent","goToPrev","next","goToNext","GhxLightboxDirective","elemRef","cfr","appRef","injector","alt","add","onClick","allItems","index","closest","source","initLightBox","Object","defineProperty","component","resolveComponentFactory","create","attachView","hostView","domElem","rootNodes","body","appendChild","Directive","ElementRef","ComponentFactoryResolver","ApplicationRef","Injector","HostBinding","GhxLightboxGroupDirective","_this","itemArray","gldList","toArray","forEach","lightBox","key","push","length","querySelectorAll","addEventListener","e","preventDefault","changeNavigation","value","subscribe","ViewChildren","ContentChildren","GhxLightboxModule","NgModule","declarations","imports","CommonModule","exports","entryComponents","providers"],"mappings":"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","sourcesContent":["import {\n  ComponentRef,\n  Injectable,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ItemType } from '../interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GhxLightboxService {\n\n  public allItems$: BehaviorSubject<ItemType[]> = new BehaviorSubject([]);\n  public allItemsLength = 0;\n  public openedIndex = 0;\n\n  public changeIndex$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  viewCont: any;\n  componentRef!: ComponentRef<any>;\n\n  constructor() { }\n\n\n  public destroy() {\n    this.componentRef.destroy();\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.remove('ghx-lightbox-opened');\n  }\n\n\n  _setupComponentInstance(item: ItemType[]) {\n    this.componentRef.instance.src = item[this.openedIndex].src;\n    this.componentRef.instance.caption = item[this.openedIndex].caption;\n  }\n\n}\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ghx-lightbox',\n  templateUrl: './ghx-lightbox.component.html',\n  styleUrls: ['./ghx-lightbox.component.scss', '../../styles/_ghx-lightbox.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GhxLightboxComponent implements OnInit, AfterContentInit {\n\n  @Input() src: string = '';\n  @Input() caption: string = '';\n  @Input() captionPosition: 'top' | 'bottom' = 'bottom';\n  @Input() showPrevNextButton: boolean = false;\n\n  @ViewChild('lightCaption', { static: true })\n    lightCaption!: ElementRef<HTMLElement>;\n  @ViewChild('lightBoxFigure', {static: true})\n    lightBoxFigure!: ElementRef<HTMLElement>;\n  @ViewChild('lightboxImage', {static: true})\n    lightboxImage!: ElementRef<HTMLElement>;\n\n  constructor(\n    public viewContainerRef: ViewContainerRef,\n    private glService: GhxLightboxService,\n    private render2: Renderer2\n  ) { }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    this.setImageHeight();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterContentInit() {\n    this.setImageHeight();\n  }\n\n  closeLightBox() {\n    this.glService.destroy();\n  }\n\n  setImageHeight() {\n    const totalHeight = window.innerHeight - 100;\n    this.render2.setStyle(this.lightboxImage.nativeElement, 'max-height', `${totalHeight}px`);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  selector: 'ghx-lightbox-actions',\n  templateUrl: './ghx-lightbox-actions.component.html',\n  styleUrls: ['./ghx-lightbox-actions.component.scss']\n})\nexport class GhxLightboxActionsComponent implements OnInit {\n\n  constructor(\n    private gls: GhxLightboxService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onCloseLightBox() {\n    this.gls.destroy();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GhxLightboxService } from '../../services';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ghx-lightbox-nav',\n  templateUrl: './ghx-lightbox-nav.component.html',\n  styleUrls: ['./ghx-lightbox-nav.component.scss']\n})\nexport class GhxLightboxNavComponent implements OnInit {\n\n  constructor(\n    public gls: GhxLightboxService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  goToPrev() {\n    if (this.gls.openedIndex === 0) {\n      return;\n    }\n    this.gls.openedIndex = this.gls.openedIndex - 1;\n    this.gls.changeIndex$.next(this.gls.openedIndex);\n  }\n  goToNext() {\n    if (this.gls.openedIndex >= this.gls.allItemsLength) {\n      return;\n    }\n    this.gls.openedIndex = this.gls.openedIndex + 1;\n    this.gls.changeIndex$.next(this.gls.openedIndex);\n  }\n\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport { GhxLightboxComponent } from '../components';\nimport { ItemType } from '../interfaces';\nimport { GhxLightboxService } from '../services';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ghxLightbox]',\n})\nexport class GhxLightboxDirective implements OnInit {\n\n  @Input() src = '';\n  @Input() alt = '';\n\n  constructor(\n    private elemRef: ElementRef<HTMLElement>,\n    private glService: GhxLightboxService,\n    private render2: Renderer2,\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.elemRef.nativeElement.classList.add('ghx-lightbox-item');\n  }\n\n\n  @HostListener('click')\n  onClick(allItems: ItemType[], index = 0) {\n    // console.error(index);\n    if (this.elemRef.nativeElement.closest('.ghx-lightbox-group') === null) {\n      this.glService.openedIndex = 0;\n      const source = [\n        {\n          src: this.src,\n          caption: this.alt\n        }\n      ];\n      this.initLightBox(source);\n    } else {\n    }\n  }\n\n  @HostBinding('class.ghx-lightbox-item')\n  get bindClass() {\n    return true;\n  }\n\n  ngOnInit() {\n    this.render2.setStyle(this.elemRef.nativeElement, 'cursor', 'pointer');\n  }\n\n\n  initLightBox(source: ItemType[]) {\n\n\n    const cf = this.cfr.resolveComponentFactory(GhxLightboxComponent);\n    const component = cf.create(this.injector);\n    this.appRef.attachView(component.hostView);\n\n    const domElem = (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n    this.glService.componentRef = component;\n\n    this.glService._setupComponentInstance(source);\n\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.add('ghx-lightbox-opened');\n  }\n\n}\n","import {\n  AfterContentInit,\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { BehaviorSubject, fromEvent } from 'rxjs';\nimport { GhxLightboxComponent } from '../components';\nimport { ItemType } from '../interfaces';\nimport { GhxLightboxService } from '../services';\nimport { GhxLightboxDirective } from './ghx-lightbox.directive';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ghxLightboxGroup]'\n})\nexport class GhxLightboxGroupDirective implements OnInit, AfterContentInit {\n\n  gld: GhxLightboxDirective;\n\n  allItems$: BehaviorSubject<ItemType[]> = new BehaviorSubject([]);\n\n  @ViewChildren(GhxLightboxDirective)\n  private gldView: QueryList<GhxLightboxDirective>;\n\n  @ContentChildren(GhxLightboxDirective)\n  public gldList: QueryList<GhxLightboxDirective>;\n\n  constructor(\n    private elemRef: ElementRef<HTMLElement>,\n    private glService: GhxLightboxService,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private appRef: ApplicationRef\n  ) {\n    this.elemRef.nativeElement.classList.add('ghx-lightbox-group');\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit() {\n    const itemArray: ItemType[] = [];\n    this.gldList.toArray().forEach((lightBox, key: number) => {\n      itemArray.push(\n        {\n          src: lightBox.src,\n          caption: lightBox.alt,\n        }\n      );\n    });\n    this.allItems$.next(itemArray);\n    this.glService.allItemsLength = itemArray.length;\n\n    const ghxItems = this.elemRef.nativeElement.querySelectorAll('.ghx-lightbox-item');\n    ghxItems.forEach((lightBox, key) => {\n      lightBox.addEventListener('click', (e: any) => {\n        e.preventDefault();\n        this.glService.openedIndex = key;\n        this.initLightBox();\n        this.changeNavigation();\n        return;\n      });\n    });\n  }\n\n\n  @HostBinding('class.ghx-lightbox-group')\n  get bindClass() {\n    return true;\n  }\n\n  initLightBox() {\n    const cf = this.cfr.resolveComponentFactory(GhxLightboxComponent);\n    const component = cf.create(this.injector);\n    this.appRef.attachView(component.hostView);\n\n    const domElem = (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n    this.glService.componentRef = component;\n\n    this.glService._setupComponentInstance(this.allItems$.value);\n    this.glService.componentRef.instance.showPrevNextButton = true;\n\n    const bodyElemet = document.querySelector('body') as HTMLBodyElement;\n    bodyElemet.classList.add('ghx-lightbox-opened');\n  }\n\n  changeNavigation() {\n    this.glService.changeIndex$.subscribe(index => {\n      this.glService._setupComponentInstance(this.allItems$.value);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  GhxLightboxComponent,\n  GhxLightboxActionsComponent,\n  GhxLightboxNavComponent\n} from './components';\n\nimport {\n  GhxLightboxService\n} from './services';\n\nimport {\n  GhxLightboxDirective,\n  GhxLightboxGroupDirective\n} from './directives';\n\n\n\n@NgModule({\n  declarations: [\n    GhxLightboxComponent,\n    GhxLightboxDirective,\n    GhxLightboxGroupDirective,\n    GhxLightboxActionsComponent,\n    GhxLightboxNavComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GhxLightboxDirective,\n    GhxLightboxGroupDirective\n  ],\n  entryComponents: [GhxLightboxComponent],\n  providers: [\n    GhxLightboxService\n  ]\n})\nexport class GhxLightboxModule { }\n"]}